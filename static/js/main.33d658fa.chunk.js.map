{"version":3,"sources":["service/web3.js","service/connectionService.js","service/tokenInstances.js","components/EtherscanLink.js","components/BasicInfo.js","components/TransferApprove.js","components/BalanceAllowance.js","components/MintBurn.js","components/Admin.js","components/InteractPanel.js","components/AppDashboard.js","components/ConnectionStatus.js","App.js","serviceWorker.js","index.js"],"names":["web3","window","Web3","currentProvider","provider","providers","HttpProvider","connectionService","isMetaMask","getNetwork","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","wrap","_context","prev","next","detectNetwork","abrupt","sent","stop","this","apply","arguments","getAccounts","_ref2","_callee2","_context2","eth","tokenInstances","ToCNHInst","Contract","JSON","parse","ToCNH","interface","ToPHPInst","ToPHP","ToUSDInst","ToUSD","EtherscanLink","props","react_default","createElement","href","concat","address","BasicInfo","Card","fluid","meta","description","tokenName","symbol","decimals","totalSupply","components_EtherscanLink","contractAddress","owner","TransferApprove","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","transferRecipient","transferAmount","approveSpender","approveAmount","handleTransferRecipientChange","bind","assertThisInitialized","handleTransferAmountChange","handleTransferSubmit","handleApproveSpenderChange","handleApproveAmountChange","handleApproveSubmit","Segment","Form","onSubmit","Field","className","htmlFor","id","type","name","placeholder","value","onChange","Button","primary","event","setState","target","preventDefault","amountStr","utils","toWei","toString","inst","methods","transfer","send","from","currentAccount","approve","React","Component","BalanceAllowance","queryAccount","balance","allowanceOwner","allowanceSpender","allowance","handleQueryAccountChange","handleBalanceSubmit","handleAllowanceOwnerChange","handleAllowanceSpenderChange","handleAllowanceSubmit","console","log","Message","fromWei","balanceOf","MintBurn","mintValue","issueTo","issueValue","burnValue","handleMintValueChange","handleMintSubmit","handleIssueToChange","handleIssueValueChange","handleIssueSubmit","handleBurnValueChange","handleBurnSubmit","mintValueStr","mint","issueValueStr","issue","burnValueStr","burn","Admin","mintWallet","recycleWallet","handleMintWalletChange","handleSetMintWalletSubmit","handleRecycleWalletChange","handleSetRecycleWalletSubmit","setMintWallet","InteractPanel","activeItem","components_BasicInfo","components_TransferApprove","components_BalanceAllowance","components_MintBurn","components_Admin","AppDashboard","token","ready","handleFiatSelect","handleMenuClick","tokenDataFetch","fetchData","Group","positive","onClick","Or","Grid","Column","width","Menu","vertical","pointing","secondary","Item","active","components_InteractPanel","Dimmer","inverted","Loader","tokenInstance","options","ConnectionStatus","columns","Icon","color","network","toUpperCase","isUnlocked","App","Container","Header","as","Divider","horizontal","components_AppDashboard","components_ConnectionStatus","accounts","length","Boolean","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.33d658fa.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\nif (typeof window !== 'undefined' && typeof window.web3 !== 'undefined') { // in browser and has metamask\r\n  web3 = new Web3(window.web3.currentProvider);\r\n} else { // server or no metamask\r\n  const provider = new Web3.providers.HttpProvider('https://rinkeby.infura.io/v3/0d714888af3b477b9994b77f9d7d967a');\r\n  web3 = new Web3(provider);\r\n}\r\n\r\nexport default web3;","import web3 from './web3';\r\nimport detectNetwork from 'web3-detect-network';\r\n\r\nconst isMetaMask = () => {\r\n  return window.web3.currentProvider.isMetaMask;\r\n};\r\n\r\nconst getNetwork = async () => {\r\n  return await detectNetwork(window.web3.currentProvider);\r\n};\r\n\r\nconst getAccounts = async () => {\r\n  return await web3.eth.getAccounts();\r\n};\r\n\r\nexport default {\r\n  isMetaMask,\r\n  getNetwork,\r\n  getAccounts\r\n};\r\n","import web3 from './web3';\r\nimport ToCNH from '../ethereum/build/ToCNH.json';\r\nimport ToPHP from '../ethereum/build/ToPHP.json';\r\nimport ToUSD from '../ethereum/build/ToUSD.json';\r\n\r\nconst ToCNHInst = new web3.eth.Contract(\r\n  JSON.parse(ToCNH.interface),\r\n  '0xf6309a0ac098378aa178eb96561ebe158813e2df'\r\n);\r\n\r\nconst ToPHPInst = new web3.eth.Contract(\r\n  JSON.parse(ToPHP.interface),\r\n  '0x5e4231be603e76edb6684e443db542385574d287'\r\n);\r\n\r\nconst ToUSDInst = new web3.eth.Contract(\r\n  JSON.parse(ToUSD.interface),\r\n  '0x7b16975161749673885b49f3772c58c34b3234a5'\r\n);\r\n\r\nexport default {\r\n  ToCNHInst,\r\n  ToPHPInst,\r\n  ToUSDInst\r\n};","import React from 'react';\r\n\r\nconst EtherscanLink = (props) => {\r\n  return (\r\n    <a href={`https://rinkeby.etherscan.io/address/${props.address}`}>{props.address}</a>\r\n  );\r\n};\r\n\r\nexport default EtherscanLink;","import React from 'react';\r\nimport { Card } from 'semantic-ui-react';\r\n\r\nimport EtherscanLink from './EtherscanLink';\r\n\r\nconst BasicInfo = (props) => {\r\n  return (\r\n    <div>\r\n      <Card fluid meta=\"Stable Coin Token Name\" description={props.tokenName} />\r\n      <Card fluid meta=\"Symbol\" description={props.symbol} />\r\n      <Card fluid meta=\"Decimals\" description={props.decimals} />\r\n      <Card fluid meta=\"Total Supply of Tokens\" description={props.totalSupply} />\r\n      <Card fluid meta=\"Contract Address\" description={<EtherscanLink address={props.contractAddress} />} />\r\n      <Card fluid meta=\"Owner\" description={<EtherscanLink address={props.owner} />} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicInfo;","import React from 'react';\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass TransferApprove extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      transferRecipient: '',\r\n      transferAmount: '',\r\n      approveSpender: '',\r\n      approveAmount: '',\r\n    }\r\n    this.handleTransferRecipientChange = this.handleTransferRecipientChange.bind(this);\r\n    this.handleTransferAmountChange = this.handleTransferAmountChange.bind(this);\r\n    this.handleTransferSubmit = this.handleTransferSubmit.bind(this);\r\n    this.handleApproveSpenderChange = this.handleApproveSpenderChange.bind(this);\r\n    this.handleApproveAmountChange = this.handleApproveAmountChange.bind(this);\r\n    this.handleApproveSubmit = this.handleApproveSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>Token Transfer</h3>\r\n          <Form onSubmit={ this.handleTransferSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"transfer-recipient\">\r\n                Recipient Address\r\n              </label>\r\n              <input id=\"transfer-recipient\" type=\"text\" name=\"recipient\" placeholder=\"0x123...\" \r\n                value={ this.state.transferRecipient } onChange={ this.handleTransferRecipientChange } />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"transfer-amount\">\r\n                Value\r\n              </label>\r\n              <input id=\"transfer-amount\" type=\"text\" name=\"transfer-amount\" placeholder=\"Amount of tokens\" \r\n                value={ this.state.transferAmount } onChange={ this.handleTransferAmountChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Transfer</Button>\r\n          </Form>\r\n          <br />\r\n          <h3>Approve</h3>\r\n          <Form onSubmit={ this.handleApproveSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"approve-spender\">\r\n                Spender Address\r\n              </label>\r\n              <input id=\"approve-spender\" type=\"text\" name=\"spender\" placeholder=\"0x123...\"\r\n                value={ this.state.approveSpender }  onChange={ this.handleApproveSpenderChange } />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"approve-amount\">\r\n                Value to approve\r\n              </label>\r\n              <input id=\"approve-amount\" type=\"text\" name=\"approve-amount\" placeholder=\"Amount of tokens\" \r\n                value={ this.state.approveAmount } onChange={ this.handleApproveAmountChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Approve</Button>\r\n          </Form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleTransferRecipientChange(event) {\r\n    this.setState({\r\n      transferRecipient: event.target.value\r\n    });\r\n  }\r\n\r\n  handleTransferAmountChange(event) {\r\n    this.setState({\r\n      transferAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleTransferSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr= web3.utils.toWei(this.state.transferAmount, 'mwei').toString();\r\n    await this.props.inst.methods.transfer(\r\n      this.state.transferRecipient, \r\n      amountStr\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n\r\n  handleApproveSpenderChange(event) {\r\n    this.setState({\r\n      approveSpender: event.target.value\r\n    });\r\n  }\r\n\r\n  handleApproveAmountChange(event) {\r\n    this.setState({\r\n      approveAmount: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleApproveSubmit(event) {\r\n    event.preventDefault();\r\n    const amountStr= web3.utils.toWei(this.state.approveAmount, 'mwei').toString();\r\n    await this.props.inst.methods.approve(\r\n      this.state.approveSpender, \r\n      amountStr\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n}\r\n\r\nexport default TransferApprove;","import React from 'react';\r\nimport { Segment, Form, Button, Message } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass BalanceAllowance extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      queryAccount: '',\r\n      balance: '',\r\n      allowanceOwner: '',\r\n      allowanceSpender: '',\r\n      allowance: ''\r\n    };\r\n    this.handleQueryAccountChange = this.handleQueryAccountChange.bind(this);\r\n    this.handleBalanceSubmit = this.handleBalanceSubmit.bind(this);\r\n    this.handleAllowanceOwnerChange = this.handleAllowanceOwnerChange.bind(this);\r\n    this.handleAllowanceSpenderChange = this.handleAllowanceSpenderChange.bind(this);\r\n    this.handleAllowanceSubmit = this.handleAllowanceSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    console.log(\"Instance\");\r\n    console.log(this.props.inst);\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>Balance</h3>\r\n          <Form onSubmit={ this.handleBalanceSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"query-account\">\r\n                Account Address\r\n              </label>\r\n              <input id=\"query-account\" type=\"text\" name=\"query-account\" placeholder=\"0x123...\"\r\n               value={ this.state.queryAccount } onChange={ this.handleQueryAccountChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Check Balance</Button>\r\n          </Form>\r\n          { \r\n            this.state.balance ? \r\n            <Message>\r\n              <p>Amount of Tokens: { web3.utils.fromWei(this.state.balance, 'mwei') }</p>\r\n            </Message> : null\r\n          }\r\n        </Segment>\r\n        <br />\r\n        <Segment>\r\n          <h3>Allowance</h3>\r\n          <Form onSubmit={ this.handleAllowanceSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"allowance-owner\">\r\n                Allowance Owner Address\r\n              </label>\r\n              <input id=\"allowance-owner\" type=\"text\" name=\"allowance-owner\" placeholder=\"0x123...\"\r\n              value={ this.state.allowanceOwner } onChange={ this.handleAllowanceOwnerChange } />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"allowance-spender\">\r\n                Allowance Spender Address\r\n              </label>\r\n              <input id=\"allowance-spender\" type=\"text\" name=\"allowance-spener\" placeholder=\"0x123...\"\r\n              value={ this.state.allowanceSpender } onChange={ this.handleAllowanceSpenderChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Check Allowance</Button>\r\n          </Form>\r\n          { \r\n            this.state.allowance ? \r\n            <Message>\r\n              <p>Allowance in Tokens: { web3.utils.fromWei(this.state.allowance, 'mwei') }</p>\r\n            </Message> : null\r\n          }\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleQueryAccountChange(event) {\r\n    this.setState({\r\n      queryAccount: event.target.value,\r\n      balance: ''\r\n    });\r\n  }\r\n\r\n  async handleBalanceSubmit(event) {\r\n    event.preventDefault();\r\n    const balance = await this.props.inst.methods.balanceOf(this.state.queryAccount).call();\r\n    this.setState({\r\n      balance\r\n    });\r\n  }\r\n\r\n  handleAllowanceOwnerChange(event) {\r\n    this.setState({\r\n      allowanceOwner: event.target.value,\r\n      allowance: ''\r\n    });\r\n  }\r\n\r\n  handleAllowanceSpenderChange(event) {\r\n    this.setState({\r\n      allowanceSpender: event.target.value,\r\n      allowance: ''\r\n    });\r\n  }\r\n\r\n  async handleAllowanceSubmit(event) {\r\n    event.preventDefault();\r\n    const allowance = await this.props.inst.methods.allowance(this.state.allowanceOwner, this.state.allowanceSpender).call();\r\n    this.setState({\r\n      allowance\r\n    });\r\n  }\r\n}\r\n\r\nexport default BalanceAllowance;","import React from 'react';\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\n\r\nimport web3 from '../service/web3';\r\n\r\nclass MintBurn extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mintValue: '',\r\n      issueTo: '',\r\n      issueValue: '',\r\n      burnValue: ''\r\n    }\r\n    this.handleMintValueChange = this.handleMintValueChange.bind(this);\r\n    this.handleMintSubmit = this.handleMintSubmit.bind(this);\r\n    this.handleIssueToChange = this.handleIssueToChange.bind(this);\r\n    this.handleIssueValueChange = this.handleIssueValueChange.bind(this);\r\n    this.handleIssueSubmit = this.handleIssueSubmit.bind(this);\r\n    this.handleBurnValueChange = this.handleBurnValueChange.bind(this);\r\n    this.handleBurnSubmit = this.handleBurnSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>Mint</h3>\r\n          <Form onSubmit={ this.handleMintSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"mint-value\">\r\n                Value\r\n              </label>\r\n              <input id=\"mint-value\" type=\"text\" name=\"mint-value\" placeholder=\"Amount of tokens\" \r\n                value={ this.state.mintValue } onChange={ this.handleMintValueChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Mint</Button>\r\n          </Form>\r\n          <br />\r\n          <h3>Issue</h3>\r\n          <Form onSubmit={ this.handleIssueSubmit}>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"issue-to\">\r\n                Address to Issue\r\n              </label>\r\n              <input id=\"issue-to\" type=\"text\" name=\"issue-to\" placeholder=\"0x123...\"\r\n                value={ this.state.issueTo }  onChange={ this.handleIssueToChange } />\r\n            </Form.Field>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"issue-value\">\r\n                Value to Issue\r\n              </label>\r\n              <input id=\"issue-value\" type=\"text\" name=\"issue-value\" placeholder=\"Amount of tokens\" \r\n                value={ this.state.issueValue } onChange={ this.handleIssueValueChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Issue</Button>\r\n          </Form>\r\n          <br />\r\n          <h3>Burn</h3>\r\n          <Form onSubmit={ this.handleBurnSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"burn-value\">\r\n                Value to Burn\r\n              </label>\r\n              <input id=\"burn-value\" type=\"text\" name=\"burn-value\" placeholder=\"Amount of tokens\"\r\n                value={ this.state.burnValue } onChange={this.handleBurnValueChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Burn</Button>\r\n          </Form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleMintValueChange(event) {\r\n    this.setState({\r\n      mintValue: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleMintSubmit(event) {\r\n    event.preventDefault();\r\n    const mintValueStr = web3.utils.toWei(this.state.mintValue, 'mwei').toString();\r\n    await this.props.inst.methods.mint(\r\n      mintValueStr\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n\r\n  handleIssueToChange(event) {\r\n    this.setState({\r\n      issueTo: event.target.value\r\n    });\r\n  }\r\n\r\n  handleIssueValueChange(event) {\r\n    this.setState({\r\n      issueValue: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleIssueSubmit(event) {\r\n    event.preventDefault();\r\n    const issueValueStr = web3.utils.toWei(this.state.issueValue, 'mwei').toString();\r\n    await this.props.inst.methods.issue(\r\n      this.state.issueTo,\r\n      issueValueStr\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n\r\n  handleBurnValueChange(event) {\r\n    this.setState({\r\n      burnValue: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleBurnSubmit(event) {\r\n    event.preventDefault();\r\n    const burnValueStr = web3.utils.toWei(this.state.burnValue, 'mwei').toString();\r\n    await this.props.inst.methods.burn(\r\n      burnValueStr\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n}\r\n\r\nexport default MintBurn;","import React from 'react';\r\nimport { Segment, Form, Button } from 'semantic-ui-react';\r\n\r\nclass Admin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      mintWallet: '',\r\n      recycleWallet: ''\r\n    };\r\n    this.handleMintWalletChange = this.handleMintWalletChange.bind(this);\r\n    this.handleSetMintWalletSubmit = this.handleSetMintWalletSubmit.bind(this);\r\n    this.handleRecycleWalletChange = this.handleRecycleWalletChange.bind(this);\r\n    this.handleSetRecycleWalletSubmit = this.handleSetRecycleWalletSubmit.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Segment>\r\n          <h3>Set Mint Wallet</h3>\r\n          <Form onSubmit={ this.handleSetMintWalletSubmit }>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"mint-wallet\">\r\n                New Mint Wallet\r\n              </label>\r\n              <input id=\"mint-wallet\" type=\"text\" name=\"mint-wallet\" placeholder=\"0x123...\"\r\n                value={this.state.mintWallet} onChange={ this.handleMintWalletChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Set New Mint Wallet</Button>\r\n          </Form>\r\n          <br />\r\n          <h3>Set Recycle Wallet</h3>\r\n          <Form onSubmit={ this.handleSetRecycleWalletSubmit}>\r\n            <Form.Field>\r\n              <label className=\"form-row\" htmlFor=\"recycle-wallet\">\r\n                New Recycle Wallet\r\n              </label>\r\n              <input id=\"recycle-wallet\" type=\"text\" name=\"recycle-wallet\" placeholder=\"0x123...\"\r\n                value={this.state.recycleWallet} onChange={ this.handleRecycleWalletChange } />\r\n            </Form.Field>\r\n            <Button className=\"form-row center-button\" type=\"submit\" primary fluid>Set New Recycle Wallet</Button>\r\n          </Form>\r\n        </Segment>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  handleMintWalletChange(event) {\r\n    this.setState({\r\n      mintWallet: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSetMintWalletSubmit(event) {\r\n    event.preventDefault();\r\n    await this.props.inst.methods.setMintWallet(\r\n      this.state.mintWallet\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n\r\n  handleRecycleWalletChange(event) {\r\n    this.setState({\r\n      recycleWallet: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSetRecycleWalletSubmit(event) {\r\n    event.preventDefault();\r\n    await this.props.inst.methods.setMintWallet(\r\n      this.state.recycleWallet\r\n    ).send({\r\n      from: this.props.currentAccount\r\n    });\r\n  }\r\n}\r\n\r\nexport default Admin;","import React from 'react';\r\n\r\nimport BasicInfo from './BasicInfo';\r\nimport TransferApprove from './TransferApprove';\r\nimport BalanceAllowance from './BalanceAllowance';\r\nimport MintBurn from './MintBurn';\r\nimport Admin from './Admin';\r\n\r\nclass InteractPanel extends React.Component {\r\n  render() {\r\n    switch (this.props.activeItem) {\r\n      case 'info':\r\n        return (\r\n          <BasicInfo \r\n            tokenName={this.props.tokenName}\r\n            symbol={this.props.symbol}\r\n            decimals={this.props.decimals}\r\n            totalSupply={this.props.totalSupply}\r\n            contractAddress={this.props.contractAddress}\r\n            owner={this.props.owner}\r\n          />\r\n        );\r\n      case 'transfer':\r\n        return ( \r\n          <TransferApprove \r\n            inst={this.props.inst}\r\n            currentAccount={ this.props.currentAccount }\r\n          />\r\n        );\r\n      case 'query':\r\n        return (\r\n          <BalanceAllowance \r\n            inst={ this.props.inst }\r\n          />\r\n        );\r\n      case 'mint':\r\n        return (\r\n          <MintBurn\r\n            inst={ this.props.inst }\r\n            currentAccount={ this.props.currentAccount }\r\n            owner={ this.props.owner }\r\n            mintWallet={ this.props.mintWallet }\r\n            recycleWallet={ this.props.recycleWallet }\r\n          />\r\n        );\r\n      case 'admin':\r\n        return (\r\n          <Admin\r\n            inst={ this.props.inst }\r\n            currentAccount={ this.props.currentAccount }\r\n            owner={ this.props.owner }\r\n            mintWallet={ this.props.mintWallet }\r\n            recycleWallet={ this.props.recycleWallet }\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <BasicInfo \r\n            tokenName={this.props.tokenName}\r\n            symbol={this.props.symbol}\r\n            decimals={this.props.decimals}\r\n            totalSupply={this.props.totalSupply}\r\n            contractAddress={this.props.contractAddress}\r\n            owner={this.props.owner}\r\n          />\r\n        );  \r\n    }\r\n  }\r\n}\r\n\r\nexport default InteractPanel;","import React from 'react';\r\nimport { Button, Grid, Menu, Segment, Dimmer, Loader } from 'semantic-ui-react';\r\n\r\nimport tokenInstances from '../service/tokenInstances';\r\nimport InteractPanel from './InteractPanel';\r\n// import InteractPanel from './InteractPanel';\r\n\r\nclass AppDashboard extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      token: 'ToCNH',\r\n      ready: false,\r\n      activeItem: 'info',\r\n      inst: '',\r\n      tokenName: '',\r\n      symbol: '',\r\n      decimals: '',\r\n      totalSupply: '',\r\n      contractAddress: '',\r\n      owner: '',\r\n      mintWallet: '',\r\n      recycleWallet: ''\r\n    };\r\n    this.handleFiatSelect = this.handleFiatSelect.bind(this);\r\n    this.handleMenuClick = this.handleMenuClick.bind(this);\r\n    this.tokenDataFetch = this.fetchData.bind(this);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* Fiat selection */}\r\n        <Button.Group>\r\n          <Button \r\n            positive={ this.state.token === 'ToCNH' } \r\n            name=\"ToCNH\"\r\n            onClick={this.handleFiatSelect}\r\n          >ToCNH</Button>\r\n          <Button.Or />\r\n          <Button \r\n            positive={ this.state.token === 'ToPHP' } \r\n            name=\"ToPHP\"\r\n            onClick={this.handleFiatSelect}\r\n          >ToPHP</Button>\r\n          <Button.Or />\r\n          <Button \r\n            positive={ this.state.token === 'ToUSD' } \r\n            name=\"ToUSD\"\r\n            onClick={this.handleFiatSelect}\r\n          >ToUSD</Button>\r\n        </Button.Group>\r\n        <br />\r\n        <br />\r\n        {/* Dashboard */}\r\n        <Grid>\r\n          <Grid.Column width={3}>\r\n            <Menu fluid vertical pointing secondary>\r\n              <Menu.Item name='info' active={this.state.activeItem === 'info'} onClick={this.handleMenuClick}>Basic info</Menu.Item>\r\n              <Menu.Item name='transfer' active={this.state.activeItem === 'transfer'} onClick={this.handleMenuClick}>Transfer / Approve</Menu.Item>\r\n              <Menu.Item name='query' active={this.state.activeItem === 'query'} onClick={this.handleMenuClick}>Balance / Allowance</Menu.Item>\r\n              <Menu.Item name='mint' active={this.state.activeItem === 'mint'} onClick={this.handleMenuClick}>Mint / Burn</Menu.Item>\r\n              <Menu.Item name='admin' active={this.state.activeItem === 'admin'} onClick={this.handleMenuClick}>Admin</Menu.Item>\r\n            </Menu>\r\n          </Grid.Column>\r\n          <Grid.Column width={13}>\r\n            { \r\n              this.state.ready ? \r\n              <InteractPanel \r\n                activeItem={ this.state.activeItem }\r\n                inst={ this.state.inst }\r\n                tokenName={ this.state.tokenName }\r\n                symbol={ this.state.symbol }\r\n                decimals={ this.state.decimals }\r\n                totalSupply={ this.state.totalSupply }\r\n                contractAddress={ this.state.contractAddress }\r\n                owner={ this.state.owner }\r\n                mintWallet={ this.state.mintWallet }\r\n                recycleWallet={ this.state.recycleWallet }\r\n                currentAccount={ this.props.currentAccount }\r\n              /> : \r\n              <Segment id=\"panel-loader-segment\">\r\n                <Dimmer active inverted>\r\n                  <Loader inverted>Loading</Loader>\r\n                </Dimmer>\r\n              </Segment> \r\n            }\r\n          </Grid.Column>\r\n        </Grid>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.setState({\r\n      ready: false\r\n    });\r\n    this.fetchData(this.state.token)\r\n  }\r\n\r\n  async fetchData(name) {\r\n    const tokenInstance = tokenInstances[name + 'Inst'];\r\n    const tokenName = await tokenInstance.methods.name().call();\r\n    const symbol = await tokenInstance.methods.symbol().call();\r\n    const decimals = await tokenInstance.methods.decimals().call();\r\n    const totalSupply = await tokenInstance.methods.totalSupply().call();\r\n    const contractAddress = tokenInstance.options.address;\r\n    const owner = await tokenInstance.methods.owner().call();\r\n    const mintWallet = await tokenInstance.methods.mintWallet().call();\r\n    const recycleWallet = await tokenInstance.methods.recycleWallet().call();\r\n    this.setState({\r\n      ready: true,\r\n      token: name,\r\n      inst: tokenInstance,\r\n      tokenName,\r\n      symbol,\r\n      decimals,\r\n      totalSupply,\r\n      contractAddress,\r\n      owner,\r\n      mintWallet,\r\n      recycleWallet\r\n    });\r\n  }\r\n\r\n  async handleFiatSelect(event, { name }) {\r\n    event.preventDefault();\r\n    this.setState({\r\n      ready: false\r\n    });\r\n    this.fetchData(name);\r\n  }\r\n\r\n  handleMenuClick(event, { name }) {\r\n    this.setState({\r\n      activeItem: name\r\n    });\r\n  }\r\n}\r\n\r\nexport default AppDashboard;","import React from 'react';\r\nimport { Grid, Icon } from 'semantic-ui-react';\r\n\r\nimport EtherscanLink from './EtherscanLink';\r\n\r\nconst ConnectionStatus = (props) => {\r\n  return (\r\n    <div>\r\n      <Grid columns={2} >\r\n        <Grid.Column width={6}>\r\n          MetaMask enabled { props.isMetaMask ? <Icon name=\"check\" color=\"green\"></Icon> : <Icon name=\"cancel\" color=\"red\"></Icon> } \r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          Netowrk：{ props.network.type ? props.network.type.toUpperCase() : '' }\r\n        </Grid.Column>\r\n      </Grid>\r\n      <Grid columns={2}>\r\n        <Grid.Column width={6}>\r\n          Account unlocked: { props.isUnlocked ? <Icon name=\"check\" color=\"green\"></Icon> : <Icon name=\"cancel\" color=\"red\"></Icon> }\r\n        </Grid.Column>\r\n        <Grid.Column width={10}>\r\n          Current Account <EtherscanLink address={props.currentAccount} />\r\n        </Grid.Column>\r\n      </Grid>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectionStatus;","import React from 'react';\nimport { Container, Header, Divider } from 'semantic-ui-react';\n\nimport './App.css';\nimport connectionService from './service/connectionService';\nimport AppDashboard from './components/AppDashboard';\nimport ConnectionStatus from './components/ConnectionStatus';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isMetaMask: false,\n      isUnlocked: false,\n      network: '',\n      currentAccount: ''\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <br />\n          <Header as='h1' color=\"blue\">Stable Coins Dashboard</Header>\n          <br />\n          <Divider horizontal>App Dashboard</Divider>\n          <AppDashboard\n            currentAccount={this.state.currentAccount}\n          />\n          <Divider horizontal>Connection Status</Divider>\n          <ConnectionStatus \n            isMetaMask={this.state.isMetaMask}\n            isUnlocked={this.state.isUnlocked}\n            network={this.state.network}\n            currentAccount={this.state.currentAccount}\n          />\n          <br />\n          <br />\n          <footer>\n            <p>GOW &copy; 2019</p>\n          </footer>\n        </Container>\n      </div>\n    );\n  }\n\n  async componentDidMount() {\n    const isMetaMask = connectionService.isMetaMask();\n    const network = await connectionService.getNetwork();\n    const accounts = await connectionService.getAccounts();\n    const isUnlocked = accounts.length > 0;\n    const currentAccount = accounts[0];\n    this.setState({\n      isMetaMask,\n      network,\n      isUnlocked,\n      currentAccount\n    });\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}